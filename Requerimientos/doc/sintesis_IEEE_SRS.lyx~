#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass paper
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package auto
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 4
\tocdepth 4
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
IEEE Recomendaciones para un SRS
\begin_inset Newline newline
\end_inset

Sintesis para la Tesis
\end_layout

\begin_layout Author
Alejandro Kondrasky
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Definiciones
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Contrato:
\series default
\emph default
 Un documento legal acordado tanto por el consumidor como por el proveedor.
 Este incluye requerimientos tanto técnicos como organizacionales , costo,
 y la planificación del producto.
 Este también podrá contener datos informales pero útiles como las expectativas
 y compromisos por parte de ambos.
 
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Consumidor:
\series default
\emph default
 La entidad que paga por el producto y usualmente decide los requerimientos
 del mismo.
 Para este caso el consumidor sera el mismo que el proveedor.
 
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Proveedor:
\series default
\emph default
 La entidad que proveerá el producto al consumidor.
 Para este caso el consumidor sera el mismo que el proveedor.
 
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Usuario:
\series default
\emph default
 La entidad que interactuara con el producto.
 No tiene por que ser ninguna de las entidades anteriores.
\end_layout

\begin_layout Section
Consideraciones para un buen SRS
\end_layout

\begin_layout Subsection
Naturaleza del SRS
\end_layout

\begin_layout Standard
El SRS es la especificación para un software particular que realiza una
 serie de funciones en un entorno especifico.
 Este debería ser escrito tanto por representantes del proveedor como del
 consumidor.
 
\end_layout

\begin_layout Standard
A continuación detallaremos las siguientes características en un SRS: 
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Funcionalidad:
\series default
\emph default
 Que es lo que debería hacer?
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Interfases externas:
\series default
\emph default
 Como interactúa con el usuario, hardware y otros software?
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Performance:
\series default
\emph default
 Cual es la velocidad, accesibilidad, tiempos de respuesta y de recuperación,
 etc; para las funciones que dicho software realiza ?
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Atributos:
\series default
\emph default
 Que consideraciones debemos tomar en cuanto a portabilidad, correctitud,
 mantenibilidad, seguridad, etc ? 
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Restricciones de diseño e implementación:
\series default
\emph default
 Cuales son los estándares , lenguajes, políticas, recursos máximos, entornos
 operativos, etc? 
\end_layout

\begin_layout Subsection
Entorno del SRS
\end_layout

\begin_layout Standard
El software podrá ser auto contenido o parte de un sistema mayor.
 En el segundo caso deberemos tener en cuenta cuales van a ser las interfaces
 requeridas, performance externa y requerimientos funcionales para con dicho
 software.
 
\end_layout

\begin_layout Standard
Como el SRS tiene un rol específico en el proceso de desarrollo del software,
 debe cuidarse de no ir mas allá de los limites de dicho rol.
 
\end_layout

\begin_layout Standard
Esto significa que el SRS :
\end_layout

\begin_layout Itemize
Definir correctamente todos los requerimientos de software.
 Estos existirán por la naturaleza de la tarea a resolver o por características
 especiales del proyecto.
\end_layout

\begin_layout Itemize
No debería describir ningún detalle de diseño u implementación.
\end_layout

\begin_layout Itemize
No debería agregar restricciones adicionales al software.
 
\end_layout

\begin_layout Standard
Entonces un SRS bien escrito solo limita el rango de diseños validos, pero
 no especifica ningún en particular.
\end_layout

\begin_layout Subsection
Características de un buen SRS
\end_layout

\begin_layout Subsubsection
Correctitud
\end_layout

\begin_layout Standard
Es correcto sii cada requerimiento declarado debería ser satisfecho por
 el software.
\end_layout

\begin_layout Standard
No existen herramientas para asegurarlo.
 EL SRS debería ser comparado con cualquier especificación aplicable como
 otros SRS otros estándares aplicables.
 
\end_layout

\begin_layout Subsubsection
Exactitud
\end_layout

\begin_layout Standard
Sera exacto sii cada requerimiento estipulado tiene una sola interpretación.
 Como mínimo, requiere que cada característica del producto sea descripta
 con un solo termino.
 En el caso de que un termino pueda tener múltiples significados en un contexto
 especifico, este deberá tener un glosario donde se especifica mas detalladament
e su significado.
 
\end_layout

\begin_layout Subsubsection
Completitud
\end_layout

\begin_layout Standard
Es completo sii incluye los siguientes elementos :
\end_layout

\begin_layout Enumerate
Todo requerimiento significante como funcionalidad, atributos, performance,
 restricciones de diseño y interfases externas.
\end_layout

\begin_layout Enumerate
Definición de la respuesta del software a todas las clases de entradas realizabl
es en todas las situaciones posibles, tanto para entradas validas como invalidas
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Especialmente las Invalidas!!!
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Etiquetas y referencias de todas las figuras, tablas y diagramas en el SRS
 y definición de todos los términos y unidades de medida.
 
\end_layout

\begin_layout Paragraph
Uso de TBD
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
To be Determinated.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Cualquier SRS que contenga TBDs no esta terminado.
 Pueden ser necesarios pero deben estar siempre acompañados por :
\end_layout

\begin_layout Enumerate
Una descripción de la causa del mismo
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Por que no se sabe la respuesta
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset

 para así saber como resolverla.
\end_layout

\begin_layout Enumerate
Una descripción de lo que se debe hacer para eliminarlo, quien deberá hacerlo
 y cuando.
 
\end_layout

\begin_layout Subsubsection
Consistencia
\end_layout

\begin_layout Paragraph
Consistencia Interna
\end_layout

\begin_layout Standard
Es consistente internamente sii ningún subconjunto de requerimientos individuale
s entran en conflicto.
\end_layout

\begin_layout Standard
Existen 3 tipos de situaciones por las que pueden haber conflictos:
\end_layout

\begin_layout Enumerate
Características especificadas de un objeto del mundo real podrían conflictuar,
 como por ejemplo la forma de presentar un resultado u otros similares.
\end_layout

\begin_layout Enumerate
Conflictos de tipo lógico o temporal entre 2 acciones especificas.
 
\end_layout

\begin_layout Enumerate
Dos o mas requisitos describen a un mismo objeto de diferente forma.
 El uso de terminología estándar y definiciones promueve la consistencia.
 
\end_layout

\begin_layout Paragraph
Ordenarlos por importancia 
\end_layout

\begin_layout Standard
Se esta ordenado por importancia si cada requerimiento tiene un identificador
 que indica la importancia del mismo.
 Existen los siguientes grados de importancia:
\end_layout

\begin_layout Enumerate

\emph on
Esencial: 
\emph default
El software no sera aceptado si no cumple con dicho requerimiento de la
 manera acordada.
 
\end_layout

\begin_layout Enumerate

\emph on
Condicional: 
\emph default
Son requerimientos que mejorarían al software pero no se requieren para
 que este sea aceptado.
\end_layout

\begin_layout Enumerate

\emph on
Opcionales: 
\emph default
Cosas extra que solo hacedlas si te sobra tiempo.
\end_layout

\begin_layout Subsubsection
Verificabilidad
\end_layout

\begin_layout Standard
Es verificable sii cada requerimiento lo es, los cuales lo son sii existe
 un proceso finito que lo chequee.
 Generalmente los ambiguos no son verificables.
 Requerimientos descriptos con adjetivos subjetivos son no verificables,
 tampoco los que requieran de plazos de tiempo o recursos excesivos para
 el desarrollo de dicho software.
\end_layout

\begin_layout Standard
En caso de no poder ser verificable , debería ser removido o redefinido
 para que lo sea.
\end_layout

\begin_layout Subsubsection
Modificabilidad
\end_layout

\begin_layout Standard
Es modificable sii su estructura y estilo son tales que es fácil realizar
 cualquier cambio en los requerimientos en forma completa y consistente,
 manteniendo la estructura y estilo.
 Esta requiere de :
\end_layout

\begin_layout Enumerate
Tener una organización coherente y fácil de usar con tablas de contenido,
 índices y explicitas referencias cruzadas.
\end_layout

\begin_layout Enumerate
No haya redundancias (no repetición de requerimientos).
\end_layout

\begin_layout Enumerate
Expresar cada requerimiento por separado antes de mezclarlos con otros
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Usar referencias cruzadas para esto...
 Podrías armarte un grafo ( que debería ser un arbol!) muestre como se entrecruz
an los requerimientos.
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Rastreabilidad 
\end_layout

\begin_layout Standard
Es rastreable si el origen de cada requerimiento es claro y facilita el
 referenciamiento de cada requerimiento en el futuro desarrollo del documento.
 Dos tipos de rastreamiento son recomendados:
\end_layout

\begin_layout Enumerate

\emph on
\lang english
Backwards
\lang spanish
: 
\emph default
Depende de que cada requerimiento se refiera explícitamente a su fuente
 en los documentos iniciales.

\emph on
 
\end_layout

\begin_layout Enumerate

\emph on
\lang english
Forward
\lang spanish
: 
\emph default
Esto depende de que cada requerimiento tenga un nombre o nro único.
\end_layout

\begin_layout Subsection
Evolución del SRS
\end_layout

\begin_layout Standard
Estos documentos evolucionan a medida de que se desarrolla el producto,
 por lo que suele ser imposible planificar ciertos detalles al inicio del
 proyecto.
 Por esta razón se deben tener las siguientes consideraciones:
\end_layout

\begin_layout Enumerate
Cada requerimiento debe ser especificado completamente tal como son conocidos
 en dicho momento, aun que se sabe inevitable la necesidad de una revisión.
 El hecho de que están incompletos debería ser recalcado
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Debe entonces utilizar el TBD u otra cosa ?
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Un proceso formal debería iniciarse para identificar, controlar, rastrear
 y reportar los cambios del proyecto.
 Aprobados dichos cambios deberían ser incorporados en el SRS de manera
 tal que :
\end_layout

\begin_deeper
\begin_layout Enumerate
Provea una exacta y completa reseña de los cambios.
\end_layout

\begin_layout Enumerate
Permita revisar la actual y nueva versión del SRS.
\end_layout

\end_deeper
\begin_layout Section
Partes de un SRS
\end_layout

\begin_layout Subsection
Introducción 
\end_layout

\begin_layout Standard
Esta debería proveer un resumen del SRS entero.
 Debería contener las siguientes secciones: 
\end_layout

\begin_layout Subsubsection
Propósito
\end_layout

\begin_layout Standard
Debe:
\end_layout

\begin_layout Enumerate
Delineamientos de su propósito.
\end_layout

\begin_layout Enumerate
Audiencia a la que va dirigido.
\end_layout

\begin_layout Subsubsection
Alcance
\end_layout

\begin_layout Standard
Debe:
\end_layout

\begin_layout Enumerate
Identificar el nombre del tipo de producto.
\end_layout

\begin_layout Enumerate
Explicar a grandes rasgos que hará y, si es necesario, que no.
\end_layout

\begin_layout Enumerate
Describir las aplicaciones de dicho software, incluyendo beneficios relevantes,
 objetivos y metas.
\end_layout

\begin_layout Subsubsection
Definiciones, anacronismos y abreviaturas
\end_layout

\begin_layout Standard
Esta sección debe proveer las definiciones de todos los términos, anacronismos
 y abreviaturas requeridas para interpretar correctamente el SRS.
 Esta información puede ser proveída mediante varios apéndices o haciendo
 referencia a otros documentos.
\end_layout

\begin_layout Subsubsection
Referencias
\end_layout

\begin_layout Standard
Debe:
\end_layout

\begin_layout Enumerate
Proveer una lista completa de todos los documentos referidos en el SRS.
\end_layout

\begin_layout Enumerate
Identificarlos con titulo, nro de reporte
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Si se aplica
\end_layout

\end_inset

, fecha y organización que lo publico.
\end_layout

\begin_layout Enumerate
Especificar las fuentes de donde fueron obtenidas las referencias.
\end_layout

\begin_layout Standard
Esta información puede ser proveída mediante un apéndice o haciendo referencia
 a otro documento.
\end_layout

\begin_layout Subsubsection
Resumen
\end_layout

\begin_layout Standard
Debe:
\end_layout

\begin_layout Enumerate
Describir que es lo que contiene el resto del SRS.
\end_layout

\begin_layout Enumerate
Explicar como este esta organizado.
\end_layout

\begin_layout Subsection
Descripción General
\end_layout

\begin_layout Standard
Esta sección debe describir los factores generales que afectan el producto
 y sus requerimientos.
 Esta sección no contiene requerimientos específicos, sino que provee un
 pantallazo general de dichos requerimientos y facilita su entendimiento.
 
\end_layout

\begin_layout Subsubsection
Perspectiva del Producto
\end_layout

\begin_layout Standard
Esta sección se encarga de comparar el producto con otros similares.
 Aclare si este es independiente y auto contenido
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
En caso de no serlo lea el IEEE en ingles :P
\end_layout

\end_inset

.
 Tiene las siguientes secciones :
\end_layout

\begin_layout Paragraph
Interfaces de Usuario
\end_layout

\begin_layout Standard
Debe especificar lo siguiente:
\end_layout

\begin_layout Enumerate

\emph on
Las características lógicas de cada interfase entre el usuario y el producto
\emph default
.
 Esta incluye la configuraciones necesarias para cumplir con los requerimientos
 de software.
 
\end_layout

\begin_layout Enumerate

\emph on
Todos los aspectos de optimización de la interfase
\emph default
.
 Esta puede ser simplemente una lista de como y como no el sistema aparecerá
 ante el usuario
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Por ejemplo 
\lang english
verbose
\lang spanish
 o 
\lang english
quiet
\end_layout

\end_inset

.
 Como otros, estos requerimientos deberán ser verificables.
 
\end_layout

\begin_layout Paragraph
Interfaces de Software
\end_layout

\begin_layout Standard
Debe especificar que otro software(e.g., bases de datos, sistemas operativos,
 etc)e interfases con otras aplicaciones.
 Para cada uno de estos se debe proveer: 
\end_layout

\begin_layout Itemize
Nombre.
\end_layout

\begin_layout Itemize
Descripción.
\end_layout

\begin_layout Itemize
Nro de especificación
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Que va aca ?
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Nro de versión.
\end_layout

\begin_layout Itemize
Fuente.
\end_layout

\begin_layout Standard
Para las interfases se debe proveer: 
\end_layout

\begin_layout Itemize
Discutir el propósito de interconectar el producto con dicho software.
 
\end_layout

\begin_layout Itemize
Definir la interfase en términos del contenido de los mensajes y formato.
 En los casos en que esta este bien documentada, con una referencia a la
 documentación alcanza.
 
\end_layout

\begin_layout Paragraph
Restricciones de Memoria
\end_layout

\begin_layout Standard
Especificar cualquier restricción o característica a tener en cuenta tanto
 para memorias primarias como secundarias.
\end_layout

\begin_layout Paragraph
Funciones del producto
\end_layout

\begin_layout Standard
Esta debe proveer un sumario de las funciones principales del producto.
\end_layout

\end_body
\end_document
